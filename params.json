{
  "name": "Sensey",
  "tagline": "Android library to make detecting gestures easy",
  "body": "\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/sensey/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/sensey) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Sensey-green.svg?style=true)](https://android-arsenal.com/details/1/3550) <a href=\"http://www.methodscount.com/?lib=com.github.nisrulz%3Asensey%3A1.2.0\"><img src=\"https://img.shields.io/badge/Methods and size-88 | 13 KB-e91e63.svg\"/></a> [![Android Weekly](https://img.shields.io/badge/Android%20Weekly-%23209-blue.svg)](http://androidweekly.net/issues/issue-209) [![Twitter](https://img.shields.io/badge/Twitter-@nisrulz-blue.svg?style=flat)](http://twitter.com/nisrulz)\r\n\r\nAndroid library which makes detecting gestures a breeze.\r\n\r\nThe library is built for simplicity and ease of use. It eliminates most boilerplate code for dealing with setting up gesture detection on Android.\r\n\r\nGo build awesome stuff with it!  :smile:\r\n\r\n> Featured in [#AndroidSweets - Issue #20](https://androidsweets.ongoodbits.com/2016/05/26/issue-20)\r\n\r\n# Changelog\r\n\r\nStarting with `1.0.1`, Changes exist in the [releases tab](https://github.com/nisrulz/sensey/releases).\r\n\r\n# Usage Docs/Wiki\r\nFor more detailed usage, check the [Wiki](https://github.com/nisrulz/sensey/wiki)\r\n\r\n# Including in your project\r\n- Sensey is available in the MavenCentral, so getting it as simple as adding it as a dependency\r\n```gradle\r\ncompile 'com.github.nisrulz:sensey:1.2.0'\r\n```\r\n\r\n\r\n#Usage\r\n+ Initialize Sensey under your onCreate() in the activity/service\r\n```java\r\nSensey.getInstance().init(context);\r\n```\r\n\r\n+ Next to enable detection for\r\n  + Shake\r\n    ```java\r\n    Sensey.getInstance().startShakeDetection(new ShakeDetector.ShakeListener() {\r\n                      @Override\r\n                      public void onShakeDetected() {\r\n                          // Shake detected, do something\r\n                      }\r\n                  });\r\n    ```\r\n    \r\n    If you want to modify the `threshold` , pass an `int` as value\r\n    ```java\r\n    Sensey.getInstance().startShakeDetection(threshold, new ShakeDetector.ShakeListener() {\r\n                      @Override\r\n                      public void onShakeDetected() {\r\n                          // Shake detected, do something\r\n                      }\r\n                  });\r\n    ```\r\n\r\n  + Flip\r\n    ```java\r\n    Sensey.getInstance().startFlipDetection(new FlipDetector.FlipListener() {\r\n                        @Override\r\n                        public void onFaceUp() {\r\n                            // Face up detected, do something\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFaceDown() {\r\n                            // Face down detected, do something\r\n                        }\r\n                    });\r\n    ```\r\n  + Orientation\r\n    ```java\r\n    Sensey.getInstance().startOrientationDetection(new OrientationDetector.OrientationListener() {\r\n                        @Override\r\n                        public void onTopSideUp() {\r\n                            // Top side up detected, do something\r\n                        }\r\n\r\n                        @Override\r\n                        public void onBottomSideUp() {\r\n                             // Bottom side up detected, do something\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRightSideUp() {\r\n                            // Right side up detected, do something\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLeftSideUp() {\r\n                             // Left side up detected, do something\r\n                        }\r\n                    });\r\n    ```\r\n  + Proximity\r\n    ```java\r\n    Sensey.getInstance().startProximityDetection(new ProximityDetector.ProximityListener() {\r\n                        @Override\r\n                        public void onNear() {\r\n                            // Near, do something\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFar() {\r\n                            // far, do something\r\n                        }\r\n                    });\r\n    ```\r\n\r\n  + Light\r\n    ```java\r\n    Sensey.getInstance().startLightetection(new LightDetector.LightListener() {\r\n            @Override public void onDark() {\r\n              // Dark\r\n            }\r\n\r\n            @Override public void onLight() {\r\n              // Light\r\n            }\r\n          });\r\n    ```\r\n\r\n    If you want to modify the `threshold` , pass an `int` as value\r\n    ```java\r\n    Sensey.getInstance().startLightetection(threshold,new LightDetector.LightListener() {\r\n            @Override public void onDark() {\r\n              // Dark\r\n            }\r\n\r\n            @Override public void onLight() {\r\n              // Light\r\n            }\r\n          });\r\n    ```\r\n\r\n\r\n\r\n+ To disable detection for\r\n    + Shake\r\n    ```java\r\n     Sensey.getInstance().stopShakeDetection();\r\n    ```\r\n    + Flip\r\n    ```java\r\n      Sensey.getInstance().stopFlipDetection();\r\n    ```\r\n    + Orientation\r\n    ```java\r\n     Sensey.getInstance().stopOrientationDetection();\r\n    ```\r\n    + Proximity\r\n    ```java\r\n     Sensey.getInstance().stopProximityDetection();\r\n    ```\r\n    + Light\r\n    ```java\r\n     Sensey.getInstance().stopLightDetection();\r\n    ```\r\n\r\n\r\n# Pull Requests\r\nI welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request. Here are some basic rules to follow to ensure timely addition of your request:\r\n  1. Match coding style (braces, spacing, etc.) This is best achieved using CMD+Option+L (Reformat code) on Mac (not sure for Windows) with Android Studio defaults.\r\n  2. If its a feature, bugfix, or anything please only change code to what you specify.\r\n  3. Please keep PR titles easy to read and descriptive of changes, this will make them easier to merge :)\r\n  4. Pull requests _must_ be made against `develop` branch. Any other branch (unless specified by the maintainers) will get rejected.\r\n  5. Check for existing [issues](https://github.com/nisrulz/sensey/issues) first, before filing an issue.  \r\n  6. Have fun!\r\n\r\n### Created & Maintained By\r\n[Nishant Srivastava](https://github.com/nisrulz) ([@nisrulz](https://www.twitter.com/nisrulz))\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2016 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}